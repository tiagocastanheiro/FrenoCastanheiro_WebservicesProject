//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FrenoCastanheiro_WebservicesProject.ServiceReferenceMSSQL {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceMSSQL.IMSSQLService")]
    public interface IMSSQLService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSSQLService/LoadWithUsername", ReplyAction="http://tempuri.org/IMSSQLService/LoadWithUsernameResponse")]
        bool LoadWithUsername(string username, decimal quota);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSSQLService/LoadWithUsername", ReplyAction="http://tempuri.org/IMSSQLService/LoadWithUsernameResponse")]
        System.Threading.Tasks.Task<bool> LoadWithUsernameAsync(string username, decimal quota);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSSQLService/LoadWithUID", ReplyAction="http://tempuri.org/IMSSQLService/LoadWithUIDResponse")]
        bool LoadWithUID(int UID, decimal quota);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSSQLService/LoadWithUID", ReplyAction="http://tempuri.org/IMSSQLService/LoadWithUIDResponse")]
        System.Threading.Tasks.Task<bool> LoadWithUIDAsync(int UID, decimal quota);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSSQLService/Consume", ReplyAction="http://tempuri.org/IMSSQLService/ConsumeResponse")]
        bool Consume(string username, string product, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSSQLService/Consume", ReplyAction="http://tempuri.org/IMSSQLService/ConsumeResponse")]
        System.Threading.Tasks.Task<bool> ConsumeAsync(string username, string product, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSSQLService/DisplayAmountByUsername", ReplyAction="http://tempuri.org/IMSSQLService/DisplayAmountByUsernameResponse")]
        decimal DisplayAmountByUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSSQLService/DisplayAmountByUsername", ReplyAction="http://tempuri.org/IMSSQLService/DisplayAmountByUsernameResponse")]
        System.Threading.Tasks.Task<decimal> DisplayAmountByUsernameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSSQLService/DisplayAmountByUID", ReplyAction="http://tempuri.org/IMSSQLService/DisplayAmountByUIDResponse")]
        decimal DisplayAmountByUID(int UID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSSQLService/DisplayAmountByUID", ReplyAction="http://tempuri.org/IMSSQLService/DisplayAmountByUIDResponse")]
        System.Threading.Tasks.Task<decimal> DisplayAmountByUIDAsync(int UID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMSSQLServiceChannel : FrenoCastanheiro_WebservicesProject.ServiceReferenceMSSQL.IMSSQLService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MSSQLServiceClient : System.ServiceModel.ClientBase<FrenoCastanheiro_WebservicesProject.ServiceReferenceMSSQL.IMSSQLService>, FrenoCastanheiro_WebservicesProject.ServiceReferenceMSSQL.IMSSQLService {
        
        public MSSQLServiceClient() {
        }
        
        public MSSQLServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MSSQLServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MSSQLServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MSSQLServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool LoadWithUsername(string username, decimal quota) {
            return base.Channel.LoadWithUsername(username, quota);
        }
        
        public System.Threading.Tasks.Task<bool> LoadWithUsernameAsync(string username, decimal quota) {
            return base.Channel.LoadWithUsernameAsync(username, quota);
        }
        
        public bool LoadWithUID(int UID, decimal quota) {
            return base.Channel.LoadWithUID(UID, quota);
        }
        
        public System.Threading.Tasks.Task<bool> LoadWithUIDAsync(int UID, decimal quota) {
            return base.Channel.LoadWithUIDAsync(UID, quota);
        }
        
        public bool Consume(string username, string product, int quantity) {
            return base.Channel.Consume(username, product, quantity);
        }
        
        public System.Threading.Tasks.Task<bool> ConsumeAsync(string username, string product, int quantity) {
            return base.Channel.ConsumeAsync(username, product, quantity);
        }
        
        public decimal DisplayAmountByUsername(string username) {
            return base.Channel.DisplayAmountByUsername(username);
        }
        
        public System.Threading.Tasks.Task<decimal> DisplayAmountByUsernameAsync(string username) {
            return base.Channel.DisplayAmountByUsernameAsync(username);
        }
        
        public decimal DisplayAmountByUID(int UID) {
            return base.Channel.DisplayAmountByUID(UID);
        }
        
        public System.Threading.Tasks.Task<decimal> DisplayAmountByUIDAsync(int UID) {
            return base.Channel.DisplayAmountByUIDAsync(UID);
        }
    }
}
