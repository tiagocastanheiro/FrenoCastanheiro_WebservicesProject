//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FrenoCastanheiro_WebservicesProject.ServiceReferenceMSSQL {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class Account : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceMSSQL.IMSSQLService")]
    public interface IMSSQLService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSSQLService/LoadWithUsername", ReplyAction="http://tempuri.org/IMSSQLService/LoadWithUsernameResponse")]
        bool LoadWithUsername(string username, decimal quota);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSSQLService/LoadWithUsername", ReplyAction="http://tempuri.org/IMSSQLService/LoadWithUsernameResponse")]
        System.Threading.Tasks.Task<bool> LoadWithUsernameAsync(string username, decimal quota);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSSQLService/LoadWithUID", ReplyAction="http://tempuri.org/IMSSQLService/LoadWithUIDResponse")]
        bool LoadWithUID(int UID, decimal quota);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSSQLService/LoadWithUID", ReplyAction="http://tempuri.org/IMSSQLService/LoadWithUIDResponse")]
        System.Threading.Tasks.Task<bool> LoadWithUIDAsync(int UID, decimal quota);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSSQLService/Consume", ReplyAction="http://tempuri.org/IMSSQLService/ConsumeResponse")]
        bool Consume(string username, string product, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSSQLService/Consume", ReplyAction="http://tempuri.org/IMSSQLService/ConsumeResponse")]
        System.Threading.Tasks.Task<bool> ConsumeAsync(string username, string product, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSSQLService/DisplayAccountByUsername", ReplyAction="http://tempuri.org/IMSSQLService/DisplayAccountByUsernameResponse")]
        FrenoCastanheiro_WebservicesProject.ServiceReferenceMSSQL.Account DisplayAccountByUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSSQLService/DisplayAccountByUsername", ReplyAction="http://tempuri.org/IMSSQLService/DisplayAccountByUsernameResponse")]
        System.Threading.Tasks.Task<FrenoCastanheiro_WebservicesProject.ServiceReferenceMSSQL.Account> DisplayAccountByUsernameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSSQLService/DisplayAccountByUID", ReplyAction="http://tempuri.org/IMSSQLService/DisplayAccountByUIDResponse")]
        FrenoCastanheiro_WebservicesProject.ServiceReferenceMSSQL.Account DisplayAccountByUID(int UID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMSSQLService/DisplayAccountByUID", ReplyAction="http://tempuri.org/IMSSQLService/DisplayAccountByUIDResponse")]
        System.Threading.Tasks.Task<FrenoCastanheiro_WebservicesProject.ServiceReferenceMSSQL.Account> DisplayAccountByUIDAsync(int UID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMSSQLServiceChannel : FrenoCastanheiro_WebservicesProject.ServiceReferenceMSSQL.IMSSQLService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MSSQLServiceClient : System.ServiceModel.ClientBase<FrenoCastanheiro_WebservicesProject.ServiceReferenceMSSQL.IMSSQLService>, FrenoCastanheiro_WebservicesProject.ServiceReferenceMSSQL.IMSSQLService {
        
        public MSSQLServiceClient() {
        }
        
        public MSSQLServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MSSQLServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MSSQLServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MSSQLServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool LoadWithUsername(string username, decimal quota) {
            return base.Channel.LoadWithUsername(username, quota);
        }
        
        public System.Threading.Tasks.Task<bool> LoadWithUsernameAsync(string username, decimal quota) {
            return base.Channel.LoadWithUsernameAsync(username, quota);
        }
        
        public bool LoadWithUID(int UID, decimal quota) {
            return base.Channel.LoadWithUID(UID, quota);
        }
        
        public System.Threading.Tasks.Task<bool> LoadWithUIDAsync(int UID, decimal quota) {
            return base.Channel.LoadWithUIDAsync(UID, quota);
        }
        
        public bool Consume(string username, string product, int quantity) {
            return base.Channel.Consume(username, product, quantity);
        }
        
        public System.Threading.Tasks.Task<bool> ConsumeAsync(string username, string product, int quantity) {
            return base.Channel.ConsumeAsync(username, product, quantity);
        }
        
        public FrenoCastanheiro_WebservicesProject.ServiceReferenceMSSQL.Account DisplayAccountByUsername(string username) {
            return base.Channel.DisplayAccountByUsername(username);
        }
        
        public System.Threading.Tasks.Task<FrenoCastanheiro_WebservicesProject.ServiceReferenceMSSQL.Account> DisplayAccountByUsernameAsync(string username) {
            return base.Channel.DisplayAccountByUsernameAsync(username);
        }
        
        public FrenoCastanheiro_WebservicesProject.ServiceReferenceMSSQL.Account DisplayAccountByUID(int UID) {
            return base.Channel.DisplayAccountByUID(UID);
        }
        
        public System.Threading.Tasks.Task<FrenoCastanheiro_WebservicesProject.ServiceReferenceMSSQL.Account> DisplayAccountByUIDAsync(int UID) {
            return base.Channel.DisplayAccountByUIDAsync(UID);
        }
    }
}
